/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package secure.sms;

import database.DBConnection;
import javax.swing.JOptionPane;
import all_requests.Request;
import database.DBConnection;
import java.sql.*;
import session.LoggedInUser;
/**
 *
 * @author Lenovo
 */
public class ResponseGUI extends javax.swing.JDialog {
    private int request_id;
    private String actionType;

    public ResponseGUI(java.awt.Frame parent, int requestId, String actionType) {
        super(parent, true); // 
        initComponents();
        this.request_id = requestId;
        this.actionType = actionType;

        System.out.println("ResponseGUI OPENED with ID: " + requestId + " and action: " + actionType);
        loadRequestDetails();
        loadStaffDropdown();
    }
 


    
    private void loadRequestDetails() {
    try {
        Connection conn = DBConnection.getConnection();
        String query = "SELECT * FROM all_requests WHERE request_id = ?";
        PreparedStatement stmt = conn.prepareStatement(query);
        stmt.setInt(1, request_id);
        ResultSet rs = stmt.executeQuery();

        if (rs.next()) {
            String requestType = rs.getString("request_type");

            // Set up the form UI
            setupUI(requestType);

            // Optionally store the type if you need it later
        }

    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Failed to load request details.");
    }
}

    private void loadStaffDropdown() {
    try {
        Connection conn = DBConnection.getConnection();
        String sql = "SELECT username FROM users WHERE role = 'maintenance'";
        PreparedStatement stmt = conn.prepareStatement(sql);
        ResultSet rs = stmt.executeQuery();

        while (rs.next()) {
            assignDropdown.addItem(rs.getString("username"));
        }
    } catch (Exception e) {
        e.printStackTrace();
    }
}
    private void setupUI(String requestType) {
    boolean isService = requestType.equalsIgnoreCase("service");

    // Assign section
    assignDropdown.setVisible(isService);
    assignLBL.setVisible(isService); // if you have a JLabel like "Assign To:"

    // Schedule section
    datePicker.setVisible(isService);
    scheduleLBL.setVisible(isService); // if you have a JLabel like "Schedule Date:"

    // Status and comment are always shown, so no need to hide them
}





    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        request_idLBL = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        statusLBL = new javax.swing.JLabel();
        statusCB = new javax.swing.JComboBox<>();
        assignLBL = new javax.swing.JLabel();
        commentLBL = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        commentTA = new javax.swing.JTextArea();
        scheduleLBL = new javax.swing.JLabel();
        submitBTN = new javax.swing.JButton();
        datePicker = new com.toedter.calendar.JCalendar();
        assignDropdown = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        request_idLBL.setText("Request ID:");

        jLabel2.setText("jLabel2");

        statusLBL.setText("Status:");

        statusCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pending", "In Progress", "Completed", "Cancelled" }));

        assignLBL.setText("Assign To:");

        commentLBL.setText("Comment:");

        commentTA.setColumns(20);
        commentTA.setRows(5);
        jScrollPane1.setViewportView(commentTA);

        scheduleLBL.setText("Schedule:");

        submitBTN.setText("Submit");
        submitBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBTNActionPerformed(evt);
            }
        });

        assignDropdown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(commentLBL)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(request_idLBL)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(assignLBL)
                            .addComponent(statusLBL))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(assignDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(statusCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(54, 54, 54))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(scheduleLBL)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(datePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(submitBTN)
                        .addGap(31, 31, 31))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(request_idLBL)
                    .addComponent(jLabel2)
                    .addComponent(statusCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(statusLBL))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(assignDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(assignLBL)
                    .addComponent(commentLBL))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(submitBTN)
                        .addGap(30, 30, 30))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(scheduleLBL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(datePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(38, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void submitBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBTNActionPerformed
                                                                                 
    String status = statusCB.getSelectedItem().toString();
    String comment = commentTA.getText();
    String assignedTo = assignDropdown.isVisible() ? assignDropdown.getSelectedItem().toString() : null;
    java.util.Date selectedDate = datePicker.getDate();
    java.sql.Timestamp schedule = null;
    if (selectedDate != null) {
        schedule = new java.sql.Timestamp(selectedDate.getTime());
    }

    if (actionType.equalsIgnoreCase("reject")) {
        status = "Rejected";
        assignedTo = null;
        schedule = new java.sql.Timestamp(System.currentTimeMillis()); // rejection timestamp
    }

    try {
        Connection conn = DBConnection.getConnection();
        String sql = "INSERT INTO responses (request_id, responder_id, comment, status_update, schedule_datetime, date_responded) VALUES (?, ?, ?, ?, ?, ?)";
        PreparedStatement stmt = conn.prepareStatement(sql);
        stmt.setInt(1, request_id);
        stmt.setInt(2, LoggedInUser.getUserId()); // assuming you track logged in user
        stmt.setString(3, comment);
        stmt.setString(4, status);
        stmt.setTimestamp(5, schedule);
        stmt.setTimestamp(6, new java.sql.Timestamp(System.currentTimeMillis()));

        int rows = stmt.executeUpdate();
        if (rows > 0) {
            JOptionPane.showMessageDialog(this, "Response saved successfully.");
            this.dispose();
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error saving response: " + e.getMessage());
        e.printStackTrace();
    }


    }//GEN-LAST:event_submitBTNActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ResponseGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ResponseGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ResponseGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ResponseGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
    int sampleRequestId = 1; // or any valid test ID
    String actionType = "approve"; // or "reject"

    java.awt.Frame dummyParent = new javax.swing.JFrame(); // if no actual parent yet
    ResponseGUI dialog = new ResponseGUI(dummyParent, sampleRequestId, actionType);
    dialog.setLocationRelativeTo(null); // center on screen
    dialog.setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> assignDropdown;
    private javax.swing.JLabel assignLBL;
    private javax.swing.JLabel commentLBL;
    private javax.swing.JTextArea commentTA;
    private com.toedter.calendar.JCalendar datePicker;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel request_idLBL;
    private javax.swing.JLabel scheduleLBL;
    private javax.swing.JComboBox<String> statusCB;
    private javax.swing.JLabel statusLBL;
    private javax.swing.JButton submitBTN;
    // End of variables declaration//GEN-END:variables
}
